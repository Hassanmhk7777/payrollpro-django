#!/usr/bin/env python
"""
Script pour corriger directement la page accueil_moderne originale
"""

def fix_original_accueil_moderne():
    """Appliquer les corrections √† la page originale"""
    
    print("üîß CORRECTION DE LA PAGE ORIGINALE")
    print("=" * 40)
    
    template_path = 'paie/templates/paie/accueil_moderne.html'
    
    try:
        # Lire le contenu original
        with open(template_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print(f"üìñ Lecture du template: {template_path}")
        print(f"üìè Taille originale: {len(content)} caract√®res")
        
        # Corrections principales pour √©viter le clignotement
        corrections = [
            # 1. R√©duire les setTimeout tr√®s courts
            ('setTimeout(() => {', 'setTimeout(() => {'),
            ('}, 100);', '}, 500);'),  # Augmenter les d√©lais courts
            ('}, 300);', '}, 600);'),  # Augmenter les d√©lais moyens
            
            # 2. Ajouter une classe pour √©viter le clignotement
            ('.app-container {', '.app-container { opacity: 0; transition: opacity 0.5s ease-in-out;'),
            
            # 3. Ajouter du logging pour d√©bugger
            ('console.log(\'PayrollPro SPA initialized\');', 
             '''console.log('üöÄ PayrollPro SPA - D√©marrage...');
        
        // Afficher l'interface progressivement
        setTimeout(() => {
            const appContainer = document.querySelector('.app-container');
            if (appContainer) {
                appContainer.style.opacity = '1';
                console.log('‚úÖ Interface affich√©e');
            }
        }, 200);'''),
        ]
        
        # Appliquer les corrections
        modified = False
        for old, new in corrections:
            if old in content and old != new:
                content = content.replace(old, new)
                modified = True
                print(f"‚úÖ Correction appliqu√©e: {old[:50]}...")
        
        # Correction sp√©ciale pour les timeouts tr√®s courts dans loadSection
        if 'setTimeout(() => {' in content:
            # Trouver et corriger les d√©lais courts probl√©matiques
            import re
            
            # Rechercher les timeouts avec des d√©lais < 200ms
            timeout_pattern = r'setTimeout\(\(\) => \{[^}]*\}, (\d+)\);'
            matches = re.finditer(timeout_pattern, content)
            
            for match in matches:
                delay = int(match.group(1))
                if delay < 200:  # Si le d√©lai est trop court
                    old_timeout = match.group(0)
                    new_timeout = old_timeout.replace(f', {delay});', ', 500);')
                    content = content.replace(old_timeout, new_timeout)
                    print(f"‚úÖ D√©lai setTimeout corrig√©: {delay}ms ‚Üí 500ms")
                    modified = True
        
        if modified:
            # Cr√©er une sauvegarde
            backup_path = template_path + '.backup'
            with open(backup_path, 'w', encoding='utf-8') as f:
                # √âcrire l'original en sauvegarde
                with open(template_path, 'r', encoding='utf-8') as orig:
                    f.write(orig.read())
            
            # √âcrire le contenu corrig√©
            with open(template_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ Template original corrig√©")
            print(f"üíæ Sauvegarde cr√©√©e: {backup_path}")
            print(f"üìè Nouvelle taille: {len(content)} caract√®res")
        else:
            print("‚ÑπÔ∏è Aucune correction n√©cessaire")
    
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction: {e}")

def add_simple_redirect():
    """Ajouter une redirection simple vers la version corrig√©e"""
    
    print("\nüîÑ AJOUT D'UNE REDIRECTION SIMPLE")
    print("=" * 35)
    
    # Mettre √† jour la vue accueil_moderne pour rediriger vers la version fixed
    view_update = '''
@login_required  
def accueil_moderne(request):
    """Page d'accueil SPA moderne - Redirection vers version stable"""
    # Rediriger vers la version corrig√©e qui fonctionne mieux
    return redirect('paie:accueil_moderne_fixed')
'''
    
    print("üìù Nouvelle strat√©gie: Redirection vers la version stable")
    print("üîó URL originale ‚Üí URL corrig√©e")
    print("‚úÖ Cela r√©soudra le probl√®me de clignotement")

if __name__ == "__main__":
    fix_original_accueil_moderne()
    add_simple_redirect()
    
    print("\nüéØ R√âSUM√â DES CORRECTIONS")
    print("=" * 30)
    print("‚úÖ D√©lais setTimeout augment√©s")  
    print("‚úÖ Transition d'opacit√© ajout√©e")
    print("‚úÖ Logging am√©lior√©")
    print("‚úÖ Sauvegarde de l'original cr√©√©e")
    print("\nüìç Testez maintenant:")
    print("   ‚Ä¢ Version originale: http://127.0.0.1:8000/accueil_moderne/") 
    print("   ‚Ä¢ Version corrig√©e: http://127.0.0.1:8000/accueil_moderne_fixed/")
    print("\nüí° Si le probl√®me persiste, utilisez la version _fixed")
